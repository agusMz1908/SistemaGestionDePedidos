@using ContadorHandy.Utils;
@model PaginatedList<Pedido>

<form method="get" action="@Url.Action("Index", "Pedido")">
    <div class="input-group mb-3">
        <input type="text" class="form-control" placeholder="Buscar por número de pedido" name="searchString" value="@ViewData["CurrentFilter"]" />
        <button type="submit" class="btn btn-handy text-white margin-der">Buscar</button>
        <a href="@Url.Action("Create", "Pedido")" class="btn btn-handy sin-bordes text-white">Agregar Pedido</a>
    </div>
</form>

@if (Model.Count > 0)
{
    <div class="row">
        @foreach (var pedido in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card border-1">
                    <div class="card-body">
                        <h5 class="card-title pb-2">PEDIDO NÚMERO: @pedido.Numero</h5>
                        <p class="card-text mb-0">Fecha de Ingreso: <span class="fw-bold">@pedido.FechaIngreso.ToString("d")</span></p>
                        <p class="card-text">Fecha de Entrega: <span class="fw-bold">@pedido.FechaFinalizado?.ToString("d")</span></p>
                        <p class="card-text mb-0">Total de terminales pedidas: <span class="fw-bold">@pedido.Total</span></p>
                        <p class="card-text mb-0">Tipo: <span class="fw-bold">@pedido.Tipo</span></p>

                        <!-- Mostrar estado del pedido -->
                        @if (pedido.Pendientes == pedido.Total)
                        {
                            <p class="card-text">Pendientes: <span class="fw-bold text-danger">@pedido.Pendientes</span></p>
                        }
                        else if (pedido.Pendientes > 0 && pedido.Pendientes < pedido.Total)
                        {
                            <p class="card-text">Pendientes: <span class="fw-bold text-warning">@pedido.Pendientes</span></p>
                        }
                        else if (pedido.Pendientes == 0)
                        {
                            <p class="card-text">Pendientes: <span class="fw-bold text-success">@pedido.Pendientes</span></p>
                        }
                        <div class="d-flex justify-content-between align-items-center">
                            @if (pedido.Pendientes == pedido.Total)
                            {
                                <p class="text-danger fw-bold m-0">SIN REALIZAR</p>
                            }
                            else if (pedido.Pendientes >= 1 && pedido.Pendientes < pedido.Total)
                            {
                                <p class="text-warning fw-bold m-0">EN PROCESO</p>
                            }
                            else
                            {
                                <p class="text-success fw-bold m-0">ENTREGADO</p>
                            }
                            <!-- Mostrar texto "ATRASADO" cuando corresponda -->
                            @if (pedido.FechaIngreso.AddDays(7) < DateTime.Now && pedido.Pendientes != 0)
                            {
                                <p class="card-text text-danger m-0 float-right fw-bold">ATRASADO</p>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <a asp-area="Admin" asp-controller="Pedido" asp-action="Details" asp-route-id="@pedido.Id" class="btn btn-handy text-white sin-bordes">Detalles</a>
                        <a asp-area="Admin" asp-controller="Pedido" asp-action="PartialDelivery" asp-route-id="@pedido.Id" class="btn btn-handy text-white sin-bordes">Entrega</a>
                        <a asp-area="Admin" asp-controller="Pedido" asp-action="Delete" asp-route-id="@pedido.Id" class="btn btn-danger sin-bordes">Eliminar</a>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No hay pedidos registrados.</p>
}

@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link bg-handy texto-handy" href="@Url.Action("Index", "Pedido", new { sortOrder = ViewData["CurrentSort"], searchString = ViewData["CurrentFilter"], pageNumber = Model.PageIndex - 1 })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Anterior</span>
                    </a>
                </li>
            }

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link bg-handy texto-handy" href="@Url.Action("Index", "Pedido", new { sortOrder = ViewData["CurrentSort"], searchString = ViewData["CurrentFilter"], pageNumber = i })">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link bg-handy texto-handy" href="@Url.Action("Index", "Pedido", new { sortOrder = ViewData["CurrentSort"], searchString = ViewData["CurrentFilter"], pageNumber = Model.PageIndex + 1 })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Siguiente</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
}







